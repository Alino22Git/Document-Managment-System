version: '3.8'

services:
  
  
  
  
  
  dms_rest_api:
    image: dms_rest_api
    build:
      context: .
      dockerfile: /DMS_REST_API/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
    depends_on:
      - db
      - rabbitmq
      - elasticsearch
    restart: unless-stopped
    networks: 
      - elastic
      - default

  webui:
    image: dms_webui
    build:
      context: ./DMS_WebUI
      dockerfile: Dockerfile
    ports:
      - "80:80"
    volumes:
      - ./DMS_WebUI/nginx.conf:/etc/nginx/nginx.conf  # Binde die Nginx-Konfigurationsdatei ein
      - ./DMS_WebUI/wwwroot:/usr/share/nginx/html     # Statische Dateien korrekt mounten
    depends_on:
      - dms_rest_api
 

  db:
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
     - "5432:5432"
    volumes:
     - postgres_data:/var/lib/postgresql/data


  
  
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5


  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - ./minio_data:/data
    environment:
      MINIO_ROOT_USER: your-access-key
      MINIO_ROOT_PASSWORD: your-secret-key
    command: server /data --console-address ":9001"

  ocr_worker:
      build:
        context: .
        dockerfile: DMS_OCR/Dockerfile
      depends_on:
        - minio
        - rabbitmq
      networks: 
        - elastic
        - default
      environment:
        - RABBITMQ_HOST=rabbitmq
        - RABBITMQ_USER=guest
        - RABBITMQ_PASSWORD=guest
        - RABBITMQ_PORT=5672
        - MINIO_ENDPOINT=minio
        - MINIO_PORT=9000
        - MINIO_ACCESS_KEY=your-access-key
        - MINIO_SECRET_KEY=your-secret-key
        - MINIO_USE_SSL=false
        - MINIO_BUCKET=uploads
        - ELASTIC_USERNAME=elastic
        - ELASTIC_PASSWORD=adminpw
        - ELASTICSEARCH_HOST=http://elasticsearch:9200
      
      
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.16.0
    container_name: elasticsearch
    ports:
      - "9200:9200"
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
    volumes:
      - elasticsearch-data:/data

      
  
  kibana:
    image: docker.elastic.co/kibana/kibana:8.16.0
    container_name: kibana
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - xpack.security.enabled=false
      - xpack.encryptedSavedObjects.enabled=false
      - xpack.reporting.enabled=false
      - xpack.spaces.enabled=false
      - xpack.securitySolution.enabled=false
      - xpack.enterpriseSearch.enabled=false



volumes:
    postgres_data:
    elasticsearch-data:

networks:
  elastic:
    driver: bridge   